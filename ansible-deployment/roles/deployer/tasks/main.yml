---
# tasks file for deployer
- name: Removing "{{ production_server }}" from LoadBalancer Pools
  command: sed -i.bak 's/server prod-server-1 10.1.1.31:80/#server prod-server-1 10.1.1.31:80/g' /etc/haproxy/haproxy.cfg
  become: true
  when: inventory_hostname == 'lb-server'

- name: Restart haproxy service
  service:
    name: haproxy
    state: restarted
  become: true
  register: disabled_prod
  when: inventory_hostname == 'lb-server'

- name: Deploy new version App on "{{production_server}}"
  docker_container:
    name: go-recipes-api
    image: "khhini/go-recipes-api:{{IMAGE_TAG}}"
    state: started
    recreate: yes
    restart_policy: always
    env:
      REDIS_SERVER: "{{REDIS_SERVER}}"
      JWT_TOKEN: "{{JWT_SECRET}}"
      MONGO_URI: "{{MONGO_URI}}"
      MONGO_DATABASE: "{{MONGO_DATABASE}}"
    published_ports:
      - 80:8080
  register: prod_deployment
  when: inventory_hostname == production_server and disabled_prod is succeeded

- name: Checking "{{production_server}}" ready to handle request
  uri:
    url: http://{{production_server}}/healthz
  register: prod_hc
  when: inventory_hostname == 'lb-server' and prod_deployment is succeeded

- name: Register "{{ production_server }}" to LoadBalancer Pools
  command: sed -i.bak 's/#server {{ production_server }}/server {{ production_server }}/g' /etc/haproxy/haproxy.cfg
  become: true
  when: inventory_hostname == 'lb-server'

- name: Restarting haproxy service
  service:
    name: haproxy
    state: restarted
  become: true
  when: inventory_hostname == 'lb-server'